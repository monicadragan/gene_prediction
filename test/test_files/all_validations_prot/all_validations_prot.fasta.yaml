---
GB10034-PA:
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: LengthCluster
  header: Length Cluster
  description: 'Check whether the prediction length fits most of the BLAST hit lengths,
    by 1D hierarchical clusterization. Meaning of the output displayed: Query_length
    [Main Cluster Length Interval]'
  approach: 
  explanation: 
  conclusion: 
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: LengthRank
  header: Length Rank
  description: Check whether the rank of the prediction length lies among 80% of all
    the BLAST hit lengths.
  approach: 
  explanation: 
  conclusion: 
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: Gene_Merge
  header: Gene Merge
  description: Check whether BLAST hits make evidence about a merge of two genes that
    match the predicted gene.
  approach: 
  explanation: 
  conclusion: 
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: Duplication
  header: Duplication
  description: Check whether there is a duplicated subsequence in the predicted gene
    by counting the hsp residue coverage of the prediction, for each hit.
  approach: 
  explanation: 
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: MA
  header: Missing/Extra sequences
  description: Finds missing and extra sequences in the prediction, based on the multiple
    alignment of the best hits. Also counts the percentage of the conserved regions
    that appear in the prediction.
  approach: 
  explanation: 
  conclusion: 
GB10040-PA:
- !ruby/object:GeneValidator::LengthClusterValidationOutput
  description: 'Check whether the prediction length fits most of the BLAST hit lengths,
    by 1D hierarchical clusterization. Meaning of the output displayed: Query_length
    [Main Cluster Length Interval]'
  header: Length Cluster
  short_header: LengthCluster
  limits:
  - 694
  - 810
  query_length: 1070
  expected: :yes
  result: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_2_len_clusters.json
    type: :bars
    title: 'Length Cluster Validation: Distribution of BLAST hit lengths'
    footer: Query Sequence, black;Most Dense Cluster,red;Other Hits, blue
    xtitle: Sequence Length
    ytitle: Number of Sequences
    aux1: 1070
    aux2: 
  approach: 'If the query sequence is well conserved and similar sequences (BLAST
    hits) are correct, we can expect query and hit sequences to have similar lengths.
    Here, we cluster the lengths of hit sequences and compare the length of our query
    sequence to the most dense cluster of hit lengths. '
  explanation: The most dense length-cluster of BLAST hits includes sequences that
    are from 694 to 810 amino-acids long. The query sequence is 1070 amino-acids long
    and is thus outside the most dense length-cluster of BLAST hits.
  conclusion: This suggests that the query sequence may be too long.
  running_time: 0.000819
- !ruby/object:GeneValidator::LengthRankValidationOutput
  description: Check whether the rank of the prediction length lies among 80% of all
    the BLAST hit lengths.
  header: Length Rank
  short_header: LengthRank
  msg: ''
  query_length: 1070
  no_of_hits: 23
  median: 805
  mean: 877
  smallest_hit: 694
  largest_hit: 1285
  extreme_hits: 5
  percentage: 22
  result: :yes
  expected: :yes
  approach: If the query sequence is well conserved and similar sequences (BLAST hits)
    are correct, we can expect query and hit sequences to have similar lengths.
  explanation: 'The query sequence is  1070 amino-acids long. BLAST identified 23
    hit sequences with lengths from 694 to 1285 amino-acids (median: 805; mean: 877).
    5 of these hit sequences (i.e. 22%) are shorter than the query sequence.'
  conclusion: There is no reason to believe there is any problem with the length of
    the query sequence.
  running_time: 9.1e-05
- !ruby/object:GeneValidator::GeneMergeValidationOutput
  description: Check whether BLAST hits make evidence about a merge of two genes that
    match the predicted gene.
  header: Gene Merge
  short_header: Gene_Merge
  slope: 0.0
  unimodality: true
  threshold_down: 0.4
  threshold_up: 1.2
  result: :no
  expected: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_2_match_2d.json
    type: :scatter
    title: 'Gene Merge Validation: Start/end of matching hit coord. on query (1 point/hit)'
    footer: ''
    xtitle: Start Offset (most left hsp)
    ytitle: End Offset (most right hsp)
    aux1: 
    aux2: 
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_2_match.json
    type: :lines
    title: 'Gene Merge Validation: Query coord covered by blast hit (1 line/hit)'
    footer: ''
    xtitle: Offset in Prediction
    ytitle: Hit Number
    aux1: 23
    aux2: 
  approach: We expect the query sequence to encode a single protein-coding gene. Here,
    we analyse the High-scoring Segment Pairs (HSPs) identified by BLAST to determine
    whether the query includes sequence from two or more genes.
  explanation: The start coordinates and the end coordinates of HSPs are unimodally
    distributed.
  conclusion: This suggest that the query sequence represents a single gene.
  running_time: 0.001421
- !ruby/object:GeneValidator::DuplicationValidationOutput
  description: Check whether there is a duplicated subsequence in the predicted gene
    by counting the hsp residue coverage of the prediction, for each hit.
  header: Duplication
  short_header: Duplication
  pvalue: 1
  threshold: 0.05
  result: :yes
  expected: :no
  average: 1.0
  approach: We expect each BLAST hit to match each region of the query at most once.
    Here, we calculate the distribution of hit coverage against the query sequence
    and use the Wilcoxon test to determine if it is higher than 1.
  explanation: The Wilcoxon test produced a p-value of 1.
  conclusion: This suggests that the query sequence contains no erroneous duplications.
  running_time: 0.022723
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::AlignmentValidationOutput
  description: Finds missing and extra sequences in the prediction, based on the multiple
    alignment of the best hits. Also counts the percentage of the conserved regions
    that appear in the prediction.
  header: Missing/Extra sequences
  short_header: MA
  gaps: 21.922841396203307%
  extra_seq: 16.2890385793019%
  consensus: 93.82716049382715%
  threshold: 20
  result: :no
  expected: :yes
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_2_ma.json
    type: :align
    title: 'Missing/Extra sequences Validation: Multiple Align. & Statistical model
      of hits'
    footer: Conserved Region, Yellow
    xtitle: Offset in the Alignment
    ytitle: ''
    aux1: 12
    aux2: Prediction, hit&nbsp;1, hit&nbsp;2, hit&nbsp;3, hit&nbsp;4, hit&nbsp;5,
      hit&nbsp;6, hit&nbsp;7, hit&nbsp;8, hit&nbsp;9, hit&nbsp;10, Statistical Model
  approach: We expect the query sequence to be similar to the top ten BLAST hits.
    Here, we create a statistical consensus model of those top hits and compare the
    query to this model.
  explanation: The query sequence includes 93.82716049382715% amino-acid residues
    present in the consensus model. 16.2890385793019% of residues in the query sequence
    are absent from the consensus profile.  21.922841396203307% of residues in the
    consensus profile are absent from the query sequence.
  conclusion: These results suggest that there may be some problems with the query
    sequence. The query sequence has a high percentage (21.922841396203307%) of missing
    residues when compared to the statistical profile (the cut-off is 20%).
  running_time: 0.982106
GB10056-PA:
- !ruby/object:GeneValidator::LengthClusterValidationOutput
  description: 'Check whether the prediction length fits most of the BLAST hit lengths,
    by 1D hierarchical clusterization. Meaning of the output displayed: Query_length
    [Main Cluster Length Interval]'
  header: Length Cluster
  short_header: LengthCluster
  limits:
  - 317
  - 365
  query_length: 339
  expected: :yes
  result: :yes
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_3_len_clusters.json
    type: :bars
    title: 'Length Cluster Validation: Distribution of BLAST hit lengths'
    footer: Query Sequence, black;Most Dense Cluster,red;Other Hits, blue
    xtitle: Sequence Length
    ytitle: Number of Sequences
    aux1: 339
    aux2: 
  approach: 'If the query sequence is well conserved and similar sequences (BLAST
    hits) are correct, we can expect query and hit sequences to have similar lengths.
    Here, we cluster the lengths of hit sequences and compare the length of our query
    sequence to the most dense cluster of hit lengths. '
  explanation: The most dense length-cluster of BLAST hits includes sequences that
    are from 317 to 365 amino-acids long. The query sequence is 339 amino-acids long
    and is thus inside the most dense length-cluster of BLAST hits.
  conclusion: There is no reason to believe there is any problem with the length of
    the query sequence.
  running_time: 0.000366
- !ruby/object:GeneValidator::LengthRankValidationOutput
  description: Check whether the rank of the prediction length lies among 80% of all
    the BLAST hit lengths.
  header: Length Rank
  short_header: LengthRank
  msg: ''
  query_length: 339
  no_of_hits: 10
  median: 331
  mean: 313
  smallest_hit: 166
  largest_hit: 365
  extreme_hits: 4
  percentage: 40
  result: :yes
  expected: :yes
  approach: If the query sequence is well conserved and similar sequences (BLAST hits)
    are correct, we can expect query and hit sequences to have similar lengths.
  explanation: 'The query sequence is  339 amino-acids long. BLAST identified 10 hit
    sequences with lengths from 166 to 365 amino-acids (median: 331; mean: 313). 4
    of these hit sequences (i.e. 40%) are shorter than the query sequence.'
  conclusion: There is no reason to believe there is any problem with the length of
    the query sequence.
  running_time: 4.8e-05
- !ruby/object:GeneValidator::GeneMergeValidationOutput
  description: Check whether BLAST hits make evidence about a merge of two genes that
    match the predicted gene.
  header: Gene Merge
  short_header: Gene_Merge
  slope: -3.500833679692545
  unimodality: false
  threshold_down: 0.4
  threshold_up: 1.2
  result: :no
  expected: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_3_match_2d.json
    type: :scatter
    title: 'Gene Merge Validation: Start/end of matching hit coord. on query (1 point/hit)'
    footer: ''
    xtitle: Start Offset (most left hsp)
    ytitle: End Offset (most right hsp)
    aux1: 352.3021657808258
    aux2: -3.500833679692545
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_3_match.json
    type: :lines
    title: 'Gene Merge Validation: Query coord covered by blast hit (1 line/hit)'
    footer: ''
    xtitle: Offset in Prediction
    ytitle: Hit Number
    aux1: 10
    aux2: 
  approach: We expect the query sequence to encode a single protein-coding gene. Here,
    we analyse the High-scoring Segment Pairs (HSPs) identified by BLAST to determine
    whether the query includes sequence from two or more genes.
  explanation: The distribution of start and/or end-coordinates of HSPs are multi-modal.
    To detect potential problems we performed a linear regression (with coordinates
    weighted inversely proportionally to  hit strength). The resulting slope is -3.5.
  conclusion: This slope is  outside our empirically calculated thresholds (0.4 and
    1.2). There is no evidence that the query contains sequence from multiple genes.
  running_time: 0.00074
- !ruby/object:GeneValidator::DuplicationValidationOutput
  description: Check whether there is a duplicated subsequence in the predicted gene
    by counting the hsp residue coverage of the prediction, for each hit.
  header: Duplication
  short_header: Duplication
  pvalue: 1
  threshold: 0.05
  result: :yes
  expected: :no
  average: 1.0
  approach: We expect each BLAST hit to match each region of the query at most once.
    Here, we calculate the distribution of hit coverage against the query sequence
    and use the Wilcoxon test to determine if it is higher than 1.
  explanation: The Wilcoxon test produced a p-value of 1.
  conclusion: This suggests that the query sequence contains no erroneous duplications.
  running_time: 0.008195
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: Mafft error
  errors: []
  result: :error
  expected: :yes
  validation_result: :error
  short_header: MA
  header: Missing/Extra sequences
  description: Finds missing and extra sequences in the prediction, based on the multiple
    alignment of the best hits. Also counts the percentage of the conserved regions
    that appear in the prediction.
  approach: 
  explanation: 
  conclusion: 
GB10058-PA:
- !ruby/object:GeneValidator::LengthClusterValidationOutput
  description: 'Check whether the prediction length fits most of the BLAST hit lengths,
    by 1D hierarchical clusterization. Meaning of the output displayed: Query_length
    [Main Cluster Length Interval]'
  header: Length Cluster
  short_header: LengthCluster
  limits:
  - 1106
  - 1567
  query_length: 1052
  expected: :yes
  result: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_4_len_clusters.json
    type: :bars
    title: 'Length Cluster Validation: Distribution of BLAST hit lengths'
    footer: Query Sequence, black;Most Dense Cluster,red;Other Hits, blue
    xtitle: Sequence Length
    ytitle: Number of Sequences
    aux1: 1052
    aux2: 
  approach: 'If the query sequence is well conserved and similar sequences (BLAST
    hits) are correct, we can expect query and hit sequences to have similar lengths.
    Here, we cluster the lengths of hit sequences and compare the length of our query
    sequence to the most dense cluster of hit lengths. '
  explanation: The most dense length-cluster of BLAST hits includes sequences that
    are from 1106 to 1567 amino-acids long. The query sequence is 1052 amino-acids
    long and is thus outside the most dense length-cluster of BLAST hits.
  conclusion: This suggests that the query sequence may be too short.
  running_time: 0.01391
- !ruby/object:GeneValidator::LengthRankValidationOutput
  description: Check whether the rank of the prediction length lies among 80% of all
    the BLAST hit lengths.
  header: Length Rank
  short_header: LengthRank
  msg: ''
  query_length: 1052
  no_of_hits: 114
  median: 1168
  mean: 1108
  smallest_hit: 455
  largest_hit: 1787
  extreme_hits: 46
  percentage: 40
  result: :yes
  expected: :yes
  approach: If the query sequence is well conserved and similar sequences (BLAST hits)
    are correct, we can expect query and hit sequences to have similar lengths.
  explanation: 'The query sequence is  1052 amino-acids long. BLAST identified 114
    hit sequences with lengths from 455 to 1787 amino-acids (median: 1168; mean: 1108).
    46 of these hit sequences (i.e. 40%) are longer than the query sequence.'
  conclusion: There is no reason to believe there is any problem with the length of
    the query sequence.
  running_time: 0.000167
- !ruby/object:GeneValidator::GeneMergeValidationOutput
  description: Check whether BLAST hits make evidence about a merge of two genes that
    match the predicted gene.
  header: Gene Merge
  short_header: Gene_Merge
  slope: -0.25314129112975275
  unimodality: false
  threshold_down: 0.4
  threshold_up: 1.2
  result: :no
  expected: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_4_match_2d.json
    type: :scatter
    title: 'Gene Merge Validation: Start/end of matching hit coord. on query (1 point/hit)'
    footer: ''
    xtitle: Start Offset (most left hsp)
    ytitle: End Offset (most right hsp)
    aux1: 1053.589103259333
    aux2: -0.25314129112975275
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_4_match.json
    type: :lines
    title: 'Gene Merge Validation: Query coord covered by blast hit (1 line/hit)'
    footer: ''
    xtitle: Offset in Prediction
    ytitle: Hit Number
    aux1: 114
    aux2: 
  approach: We expect the query sequence to encode a single protein-coding gene. Here,
    we analyse the High-scoring Segment Pairs (HSPs) identified by BLAST to determine
    whether the query includes sequence from two or more genes.
  explanation: The distribution of start and/or end-coordinates of HSPs are multi-modal.
    To detect potential problems we performed a linear regression (with coordinates
    weighted inversely proportionally to  hit strength). The resulting slope is -0.25.
  conclusion: This slope is  outside our empirically calculated thresholds (0.4 and
    1.2). There is no evidence that the query contains sequence from multiple genes.
  running_time: 0.00307
- !ruby/object:GeneValidator::DuplicationValidationOutput
  description: Check whether there is a duplicated subsequence in the predicted gene
    by counting the hsp residue coverage of the prediction, for each hit.
  header: Duplication
  short_header: Duplication
  pvalue: 1
  threshold: 0.05
  result: :yes
  expected: :no
  average: 1.0
  approach: We expect each BLAST hit to match each region of the query at most once.
    Here, we calculate the distribution of hit coverage against the query sequence
    and use the Wilcoxon test to determine if it is higher than 1.
  explanation: The Wilcoxon test produced a p-value of 1.
  conclusion: This suggests that the query sequence contains no erroneous duplications.
  running_time: 0.070181
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: Mafft error
  errors: []
  result: :error
  expected: :yes
  validation_result: :error
  short_header: MA
  header: Missing/Extra sequences
  description: Finds missing and extra sequences in the prediction, based on the multiple
    alignment of the best hits. Also counts the percentage of the conserved regions
    that appear in the prediction.
  approach: 
  explanation: 
  conclusion: 
GB10063-PA:
- !ruby/object:GeneValidator::LengthClusterValidationOutput
  description: 'Check whether the prediction length fits most of the BLAST hit lengths,
    by 1D hierarchical clusterization. Meaning of the output displayed: Query_length
    [Main Cluster Length Interval]'
  header: Length Cluster
  short_header: LengthCluster
  limits:
  - 105
  - 629
  query_length: 615
  expected: :yes
  result: :yes
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_5_len_clusters.json
    type: :bars
    title: 'Length Cluster Validation: Distribution of BLAST hit lengths'
    footer: Query Sequence, black;Most Dense Cluster,red;Other Hits, blue
    xtitle: Sequence Length
    ytitle: Number of Sequences
    aux1: 615
    aux2: 
  approach: 'If the query sequence is well conserved and similar sequences (BLAST
    hits) are correct, we can expect query and hit sequences to have similar lengths.
    Here, we cluster the lengths of hit sequences and compare the length of our query
    sequence to the most dense cluster of hit lengths. '
  explanation: The most dense length-cluster of BLAST hits includes sequences that
    are from 105 to 629 amino-acids long. The query sequence is 615 amino-acids long
    and is thus inside the most dense length-cluster of BLAST hits.
  conclusion: There is no reason to believe there is any problem with the length of
    the query sequence.
  running_time: 0.034414
- !ruby/object:GeneValidator::LengthRankValidationOutput
  description: Check whether the rank of the prediction length lies among 80% of all
    the BLAST hit lengths.
  header: Length Rank
  short_header: LengthRank
  msg: ''
  query_length: 615
  no_of_hits: 200
  median: 748
  mean: 880
  smallest_hit: 105
  largest_hit: 2485
  extreme_hits: 90
  percentage: 45
  result: :yes
  expected: :yes
  approach: If the query sequence is well conserved and similar sequences (BLAST hits)
    are correct, we can expect query and hit sequences to have similar lengths.
  explanation: 'The query sequence is  615 amino-acids long. BLAST identified 200
    hit sequences with lengths from 105 to 2485 amino-acids (median: 748; mean: 880).
    90 of these hit sequences (i.e. 45%) are longer than the query sequence.'
  conclusion: There is no reason to believe there is any problem with the length of
    the query sequence.
  running_time: 0.000257
- !ruby/object:GeneValidator::GeneMergeValidationOutput
  description: Check whether BLAST hits make evidence about a merge of two genes that
    match the predicted gene.
  header: Gene Merge
  short_header: Gene_Merge
  slope: -0.01847710358414582
  unimodality: false
  threshold_down: 0.4
  threshold_up: 1.2
  result: :no
  expected: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_5_match_2d.json
    type: :scatter
    title: 'Gene Merge Validation: Start/end of matching hit coord. on query (1 point/hit)'
    footer: ''
    xtitle: Start Offset (most left hsp)
    ytitle: End Offset (most right hsp)
    aux1: 552.571307882806
    aux2: -0.01847710358414582
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_5_match.json
    type: :lines
    title: 'Gene Merge Validation: Query coord covered by blast hit (1 line/hit)'
    footer: ''
    xtitle: Offset in Prediction
    ytitle: Hit Number
    aux1: 200
    aux2: 
  approach: We expect the query sequence to encode a single protein-coding gene. Here,
    we analyse the High-scoring Segment Pairs (HSPs) identified by BLAST to determine
    whether the query includes sequence from two or more genes.
  explanation: The distribution of start and/or end-coordinates of HSPs are multi-modal.
    To detect potential problems we performed a linear regression (with coordinates
    weighted inversely proportionally to  hit strength). The resulting slope is -0.02.
  conclusion: This slope is  outside our empirically calculated thresholds (0.4 and
    1.2). There is no evidence that the query contains sequence from multiple genes.
  running_time: 0.005995
- !ruby/object:GeneValidator::ValidationReport
  message: Unexpected error
  errors: []
  result: :error
  expected: :yes
  validation_result: :error
  short_header: Duplication
  header: Duplication
  description: Check whether there is a duplicated subsequence in the predicted gene
    by counting the hsp residue coverage of the prediction, for each hit.
  approach: 
  explanation: 
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: Mafft error
  errors: []
  result: :error
  expected: :yes
  validation_result: :error
  short_header: MA
  header: Missing/Extra sequences
  description: Finds missing and extra sequences in the prediction, based on the multiple
    alignment of the best hits. Also counts the percentage of the conserved regions
    that appear in the prediction.
  approach: 
  explanation: 
  conclusion: 
GB10071-PA:
- !ruby/object:GeneValidator::LengthClusterValidationOutput
  description: 'Check whether the prediction length fits most of the BLAST hit lengths,
    by 1D hierarchical clusterization. Meaning of the output displayed: Query_length
    [Main Cluster Length Interval]'
  header: Length Cluster
  short_header: LengthCluster
  limits:
  - 379
  - 402
  query_length: 494
  expected: :yes
  result: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_6_len_clusters.json
    type: :bars
    title: 'Length Cluster Validation: Distribution of BLAST hit lengths'
    footer: Query Sequence, black;Most Dense Cluster,red;Other Hits, blue
    xtitle: Sequence Length
    ytitle: Number of Sequences
    aux1: 494
    aux2: 
  approach: 'If the query sequence is well conserved and similar sequences (BLAST
    hits) are correct, we can expect query and hit sequences to have similar lengths.
    Here, we cluster the lengths of hit sequences and compare the length of our query
    sequence to the most dense cluster of hit lengths. '
  explanation: The most dense length-cluster of BLAST hits includes sequences that
    are from 379 to 402 amino-acids long. The query sequence is 494 amino-acids long
    and is thus outside the most dense length-cluster of BLAST hits.
  conclusion: This suggests that the query sequence may be too long.
  running_time: 0.000785
- !ruby/object:GeneValidator::LengthRankValidationOutput
  description: Check whether the rank of the prediction length lies among 80% of all
    the BLAST hit lengths.
  header: Length Rank
  short_header: LengthRank
  msg: too&nbsp;long
  query_length: 494
  no_of_hits: 27
  median: 398
  mean: 397
  smallest_hit: 335
  largest_hit: 416
  extreme_hits: 0
  percentage: 0
  result: :no
  expected: :yes
  approach: If the query sequence is well conserved and similar sequences (BLAST hits)
    are correct, we can expect query and hit sequences to have similar lengths.
  explanation: 'The query sequence is  494 amino-acids long. BLAST identified 27 hit
    sequences with lengths from 335 to 416 amino-acids (median: 398; mean: 397). All
    hit sequences are shorter than the query sequence.'
  conclusion: The sequence may be too long.
  running_time: 0.000113
- !ruby/object:GeneValidator::GeneMergeValidationOutput
  description: Check whether BLAST hits make evidence about a merge of two genes that
    match the predicted gene.
  header: Gene Merge
  short_header: Gene_Merge
  slope: -6.977334922898902
  unimodality: false
  threshold_down: 0.4
  threshold_up: 1.2
  result: :no
  expected: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_6_match_2d.json
    type: :scatter
    title: 'Gene Merge Validation: Start/end of matching hit coord. on query (1 point/hit)'
    footer: ''
    xtitle: Start Offset (most left hsp)
    ytitle: End Offset (most right hsp)
    aux1: 494.21460450242125
    aux2: -6.977334922898902
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_6_match.json
    type: :lines
    title: 'Gene Merge Validation: Query coord covered by blast hit (1 line/hit)'
    footer: ''
    xtitle: Offset in Prediction
    ytitle: Hit Number
    aux1: 27
    aux2: 
  approach: We expect the query sequence to encode a single protein-coding gene. Here,
    we analyse the High-scoring Segment Pairs (HSPs) identified by BLAST to determine
    whether the query includes sequence from two or more genes.
  explanation: The distribution of start and/or end-coordinates of HSPs are multi-modal.
    To detect potential problems we performed a linear regression (with coordinates
    weighted inversely proportionally to  hit strength). The resulting slope is -6.98.
  conclusion: This slope is  outside our empirically calculated thresholds (0.4 and
    1.2). There is no evidence that the query contains sequence from multiple genes.
  running_time: 0.001166
- !ruby/object:GeneValidator::DuplicationValidationOutput
  description: Check whether there is a duplicated subsequence in the predicted gene
    by counting the hsp residue coverage of the prediction, for each hit.
  header: Duplication
  short_header: Duplication
  pvalue: 0.001953125
  threshold: 0.05
  result: :no
  expected: :no
  average: 1.068
  approach: We expect each BLAST hit to match each region of the query at most once.
    Here, we calculate the distribution of hit coverage against the query sequence
    and use the Wilcoxon test to determine if it is higher than 1.
  explanation: The Wilcoxon test produced a p-value of 0.002 (average = 1.07).
  conclusion: The null hypothesis is rejected - thus a region of the query sequence
    is likely repeated more than once.
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::AlignmentValidationOutput
  description: Finds missing and extra sequences in the prediction, based on the multiple
    alignment of the best hits. Also counts the percentage of the conserved regions
    that appear in the prediction.
  header: Missing/Extra sequences
  short_header: MA
  gaps: 6.0606060606060606%
  extra_seq: 21.022727272727273%
  consensus: 79.45205479452055%
  threshold: 20
  result: :no
  expected: :yes
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_6_ma.json
    type: :align
    title: 'Missing/Extra sequences Validation: Multiple Align. & Statistical model
      of hits'
    footer: Conserved Region, Yellow
    xtitle: Offset in the Alignment
    ytitle: ''
    aux1: 12
    aux2: Prediction, hit&nbsp;1, hit&nbsp;2, hit&nbsp;3, hit&nbsp;4, hit&nbsp;5,
      hit&nbsp;6, hit&nbsp;7, hit&nbsp;8, hit&nbsp;9, hit&nbsp;10, Statistical Model
  approach: We expect the query sequence to be similar to the top ten BLAST hits.
    Here, we create a statistical consensus model of those top hits and compare the
    query to this model.
  explanation: The query sequence includes 79.45205479452055% amino-acid residues
    present in the consensus model. 21.022727272727273% of residues in the query sequence
    are absent from the consensus profile.  6.0606060606060606% of residues in the
    consensus profile are absent from the query sequence.
  conclusion: These results suggest that there may be some problems with the query
    sequence. The query sequence has a high percentage (21.022727272727273%) of extra
    residues absent from the statistical profile (the cut-off is 20%).
  running_time: 0.228724
GB10091-PA:
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: LengthCluster
  header: Length Cluster
  description: 'Check whether the prediction length fits most of the BLAST hit lengths,
    by 1D hierarchical clusterization. Meaning of the output displayed: Query_length
    [Main Cluster Length Interval]'
  approach: 
  explanation: 
  conclusion: 
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: LengthRank
  header: Length Rank
  description: Check whether the rank of the prediction length lies among 80% of all
    the BLAST hit lengths.
  approach: 
  explanation: 
  conclusion: 
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: Gene_Merge
  header: Gene Merge
  description: Check whether BLAST hits make evidence about a merge of two genes that
    match the predicted gene.
  approach: 
  explanation: 
  conclusion: 
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: Duplication
  header: Duplication
  description: Check whether there is a duplicated subsequence in the predicted gene
    by counting the hsp residue coverage of the prediction, for each hit.
  approach: 
  explanation: 
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: MA
  header: Missing/Extra sequences
  description: Finds missing and extra sequences in the prediction, based on the multiple
    alignment of the best hits. Also counts the percentage of the conserved regions
    that appear in the prediction.
  approach: 
  explanation: 
  conclusion: 
GB10098-PA:
- !ruby/object:GeneValidator::LengthClusterValidationOutput
  description: 'Check whether the prediction length fits most of the BLAST hit lengths,
    by 1D hierarchical clusterization. Meaning of the output displayed: Query_length
    [Main Cluster Length Interval]'
  header: Length Cluster
  short_header: LengthCluster
  limits:
  - 633
  - 965
  query_length: 826
  expected: :yes
  result: :yes
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_8_len_clusters.json
    type: :bars
    title: 'Length Cluster Validation: Distribution of BLAST hit lengths'
    footer: Query Sequence, black;Most Dense Cluster,red;Other Hits, blue
    xtitle: Sequence Length
    ytitle: Number of Sequences
    aux1: 826
    aux2: 
  approach: 'If the query sequence is well conserved and similar sequences (BLAST
    hits) are correct, we can expect query and hit sequences to have similar lengths.
    Here, we cluster the lengths of hit sequences and compare the length of our query
    sequence to the most dense cluster of hit lengths. '
  explanation: The most dense length-cluster of BLAST hits includes sequences that
    are from 633 to 965 amino-acids long. The query sequence is 826 amino-acids long
    and is thus inside the most dense length-cluster of BLAST hits.
  conclusion: There is no reason to believe there is any problem with the length of
    the query sequence.
  running_time: 0.00965
- !ruby/object:GeneValidator::LengthRankValidationOutput
  description: Check whether the rank of the prediction length lies among 80% of all
    the BLAST hit lengths.
  header: Length Rank
  short_header: LengthRank
  msg: ''
  query_length: 826
  no_of_hits: 93
  median: 798
  mean: 795
  smallest_hit: 250
  largest_hit: 1406
  extreme_hits: 37
  percentage: 40
  result: :yes
  expected: :yes
  approach: If the query sequence is well conserved and similar sequences (BLAST hits)
    are correct, we can expect query and hit sequences to have similar lengths.
  explanation: 'The query sequence is  826 amino-acids long. BLAST identified 93 hit
    sequences with lengths from 250 to 1406 amino-acids (median: 798; mean: 795).
    37 of these hit sequences (i.e. 40%) are shorter than the query sequence.'
  conclusion: There is no reason to believe there is any problem with the length of
    the query sequence.
  running_time: 0.000121
- !ruby/object:GeneValidator::GeneMergeValidationOutput
  description: Check whether BLAST hits make evidence about a merge of two genes that
    match the predicted gene.
  header: Gene Merge
  short_header: Gene_Merge
  slope: -0.036663940433547745
  unimodality: false
  threshold_down: 0.4
  threshold_up: 1.2
  result: :no
  expected: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_8_match_2d.json
    type: :scatter
    title: 'Gene Merge Validation: Start/end of matching hit coord. on query (1 point/hit)'
    footer: ''
    xtitle: Start Offset (most left hsp)
    ytitle: End Offset (most right hsp)
    aux1: 809.121555586734
    aux2: -0.036663940433547745
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_8_match.json
    type: :lines
    title: 'Gene Merge Validation: Query coord covered by blast hit (1 line/hit)'
    footer: ''
    xtitle: Offset in Prediction
    ytitle: Hit Number
    aux1: 93
    aux2: 
  approach: We expect the query sequence to encode a single protein-coding gene. Here,
    we analyse the High-scoring Segment Pairs (HSPs) identified by BLAST to determine
    whether the query includes sequence from two or more genes.
  explanation: The distribution of start and/or end-coordinates of HSPs are multi-modal.
    To detect potential problems we performed a linear regression (with coordinates
    weighted inversely proportionally to  hit strength). The resulting slope is -0.04.
  conclusion: This slope is  outside our empirically calculated thresholds (0.4 and
    1.2). There is no evidence that the query contains sequence from multiple genes.
  running_time: 0.00219
- !ruby/object:GeneValidator::DuplicationValidationOutput
  description: Check whether there is a duplicated subsequence in the predicted gene
    by counting the hsp residue coverage of the prediction, for each hit.
  header: Duplication
  short_header: Duplication
  pvalue: 1
  threshold: 0.05
  result: :yes
  expected: :no
  average: 1.0
  approach: We expect each BLAST hit to match each region of the query at most once.
    Here, we calculate the distribution of hit coverage against the query sequence
    and use the Wilcoxon test to determine if it is higher than 1.
  explanation: The Wilcoxon test produced a p-value of 1.
  conclusion: This suggests that the query sequence contains no erroneous duplications.
  running_time: 0.064722
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: Mafft error
  errors: []
  result: :error
  expected: :yes
  validation_result: :error
  short_header: MA
  header: Missing/Extra sequences
  description: Finds missing and extra sequences in the prediction, based on the multiple
    alignment of the best hits. Also counts the percentage of the conserved regions
    that appear in the prediction.
  approach: 
  explanation: 
  conclusion: 
GB10113-PA:
- !ruby/object:GeneValidator::LengthClusterValidationOutput
  description: 'Check whether the prediction length fits most of the BLAST hit lengths,
    by 1D hierarchical clusterization. Meaning of the output displayed: Query_length
    [Main Cluster Length Interval]'
  header: Length Cluster
  short_header: LengthCluster
  limits:
  - 300
  - 506
  query_length: 659
  expected: :yes
  result: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_9_len_clusters.json
    type: :bars
    title: 'Length Cluster Validation: Distribution of BLAST hit lengths'
    footer: Query Sequence, black;Most Dense Cluster,red;Other Hits, blue
    xtitle: Sequence Length
    ytitle: Number of Sequences
    aux1: 659
    aux2: 
  approach: 'If the query sequence is well conserved and similar sequences (BLAST
    hits) are correct, we can expect query and hit sequences to have similar lengths.
    Here, we cluster the lengths of hit sequences and compare the length of our query
    sequence to the most dense cluster of hit lengths. '
  explanation: The most dense length-cluster of BLAST hits includes sequences that
    are from 300 to 506 amino-acids long. The query sequence is 659 amino-acids long
    and is thus outside the most dense length-cluster of BLAST hits.
  conclusion: This suggests that the query sequence may be too long.
  running_time: 0.00065
- !ruby/object:GeneValidator::LengthRankValidationOutput
  description: Check whether the rank of the prediction length lies among 80% of all
    the BLAST hit lengths.
  header: Length Rank
  short_header: LengthRank
  msg: ''
  query_length: 659
  no_of_hits: 18
  median: 503
  mean: 712
  smallest_hit: 300
  largest_hit: 2224
  extreme_hits: 7
  percentage: 39
  result: :yes
  expected: :yes
  approach: If the query sequence is well conserved and similar sequences (BLAST hits)
    are correct, we can expect query and hit sequences to have similar lengths.
  explanation: 'The query sequence is  659 amino-acids long. BLAST identified 18 hit
    sequences with lengths from 300 to 2224 amino-acids (median: 503; mean: 712).
    7 of these hit sequences (i.e. 39%) are shorter than the query sequence.'
  conclusion: There is no reason to believe there is any problem with the length of
    the query sequence.
  running_time: 5.9e-05
- !ruby/object:GeneValidator::GeneMergeValidationOutput
  description: Check whether BLAST hits make evidence about a merge of two genes that
    match the predicted gene.
  header: Gene Merge
  short_header: Gene_Merge
  slope: -2.323577963298711
  unimodality: false
  threshold_down: 0.4
  threshold_up: 1.2
  result: :no
  expected: :no
  plot_files:
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_9_match_2d.json
    type: :scatter
    title: 'Gene Merge Validation: Start/end of matching hit coord. on query (1 point/hit)'
    footer: ''
    xtitle: Start Offset (most left hsp)
    ytitle: End Offset (most right hsp)
    aux1: 372.8025039114409
    aux2: -2.323577963298711
  - !ruby/struct:GeneValidator::Plot
    filename: all_validations_prot.fasta_9_match.json
    type: :lines
    title: 'Gene Merge Validation: Query coord covered by blast hit (1 line/hit)'
    footer: ''
    xtitle: Offset in Prediction
    ytitle: Hit Number
    aux1: 18
    aux2: 
  approach: We expect the query sequence to encode a single protein-coding gene. Here,
    we analyse the High-scoring Segment Pairs (HSPs) identified by BLAST to determine
    whether the query includes sequence from two or more genes.
  explanation: The distribution of start and/or end-coordinates of HSPs are multi-modal.
    To detect potential problems we performed a linear regression (with coordinates
    weighted inversely proportionally to  hit strength). The resulting slope is -2.32.
  conclusion: This slope is  outside our empirically calculated thresholds (0.4 and
    1.2). There is no evidence that the query contains sequence from multiple genes.
  running_time: 0.001257
- !ruby/object:GeneValidator::DuplicationValidationOutput
  description: Check whether there is a duplicated subsequence in the predicted gene
    by counting the hsp residue coverage of the prediction, for each hit.
  header: Duplication
  short_header: Duplication
  pvalue: 0.25
  threshold: 0.05
  result: :yes
  expected: :no
  average: 1.059
  approach: We expect each BLAST hit to match each region of the query at most once.
    Here, we calculate the distribution of hit coverage against the query sequence
    and use the Wilcoxon test to determine if it is higher than 1.
  explanation: The Wilcoxon test produced a p-value of 0.250.
  conclusion: This suggests that the query sequence contains no erroneous duplications.
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: Mafft error
  errors: []
  result: :error
  expected: :yes
  validation_result: :error
  short_header: MA
  header: Missing/Extra sequences
  description: Finds missing and extra sequences in the prediction, based on the multiple
    alignment of the best hits. Also counts the percentage of the conserved regions
    that appear in the prediction.
  approach: 
  explanation: 
  conclusion: 
sp|P83011|13KDA_SCYCA:
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: LengthCluster
  header: Length Cluster
  description: 'Check whether the prediction length fits most of the BLAST hit lengths,
    by 1D hierarchical clusterization. Meaning of the output displayed: Query_length
    [Main Cluster Length Interval]'
  approach: 
  explanation: 
  conclusion: 
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: LengthRank
  header: Length Rank
  description: Check whether the rank of the prediction length lies among 80% of all
    the BLAST hit lengths.
  approach: 
  explanation: 
  conclusion: 
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: Gene_Merge
  header: Gene Merge
  description: Check whether BLAST hits make evidence about a merge of two genes that
    match the predicted gene.
  approach: 
  explanation: 
  conclusion: 
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: Duplication
  header: Duplication
  description: Check whether there is a duplicated subsequence in the predicted gene
    by counting the hsp residue coverage of the prediction, for each hit.
  approach: 
  explanation: 
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: ''
  errors: []
  result: :unapplicable
  expected: :yes
  validation_result: :unapplicable
  short_header: ''
  header: ''
  description: ''
  approach: ''
  explanation: ''
  conclusion: ''
- !ruby/object:GeneValidator::ValidationReport
  message: Not enough evidence
  errors: []
  result: :warning
  expected: :yes
  validation_result: :warning
  short_header: MA
  header: Missing/Extra sequences
  description: Finds missing and extra sequences in the prediction, based on the multiple
    alignment of the best hits. Also counts the percentage of the conserved regions
    that appear in the prediction.
  approach: 
  explanation: 
  conclusion: 
